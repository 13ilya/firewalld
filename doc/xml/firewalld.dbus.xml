<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
[
<!ENTITY authors SYSTEM "authors.xml">
<!ENTITY seealso SYSTEM "seealso.xml">
<!ENTITY notes SYSTEM "notes.xml">
]>

<!--
  This file is part of firewalld.

  Copyright (C) 2010-2014 Red Hat, Inc.
  Authors:
  Thomas Woerner <twoerner@redhat.com>
  Jiri Popelka <jpopelka@redhat.com>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<refentry id="firewalld.dbus">

  <refentryinfo>
    <title>firewalld.dbus</title>
    <productname>firewalld</productname>
    &authors;
  </refentryinfo>

  <refmeta>
    <refentrytitle>firewalld.dbus</refentrytitle>
    <manvolnum>5</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>firewalld.dbus</refname>
    <refpurpose>firewalld D-Bus interface description</refpurpose>
  </refnamediv>

  <refsect1 id="object-paths">
    <title>Object Paths</title>
    <para>
      This is the basic firewalld object path structure. The used interfaces are explained below in <xref linkend="interfaces"/>.
    </para>
    <programlisting>
/org/fedoraproject/FirewallD1
  Interfaces
    <link linkend="FirewallD1">org.fedoraproject.FirewallD1</link>
    <link linkend="FirewallD1.direct">org.fedoraproject.FirewallD1.direct</link>
    <link linkend="FirewallD1.policies">org.fedoraproject.FirewallD1.policies</link>
    <link linkend="FirewallD1.zone">org.fedoraproject.FirewallD1.zone</link>
    org.freedesktop.DBus.Introspectable
    org.freedesktop.DBus.Properties

/org/fedoraproject/FirewallD1/config
  Interfaces
    <link linkend="FirewallD1.config">org.fedoraproject.FirewallD1.config</link>
    <link linkend="FirewallD1.config.direct">org.fedoraproject.FirewallD1.config.direct</link>
    <link linkend="FirewallD1.config.policies">org.fedoraproject.FirewallD1.config.policies</link>
    org.freedesktop.DBus.Introspectable
    org.freedesktop.DBus.Properties

/org/fedoraproject/FirewallD1/config/zone/i
  Interfaces
    <link linkend="FirewallD1.config.zone">org.fedoraproject.FirewallD1.config.zone</link>
    org.freedesktop.DBus.Introspectable
    org.freedesktop.DBus.Properties

/org/fedoraproject/FirewallD1/config/service/i
  Interfaces:
    <link linkend="FirewallD1.config.service">org.fedoraproject.FirewallD1.config.service</link>
    org.freedesktop.DBus.Introspectable
    org.freedesktop.DBus.Properties

/org/fedoraproject/FirewallD1/config/icmptype/i
  Interfaces
    <link linkend="FirewallD1.config.icmptype">org.fedoraproject.FirewallD1.config.icmptype</link>
    org.freedesktop.DBus.Introspectable
    org.freedesktop.DBus.Properties
    </programlisting>
  </refsect1>

  <refsect1 id="interfaces">
    <title>Interfaces</title>

    <para>
    </para>


    <refsect2 id="FirewallD1">
      <title>org.fedoraproject.FirewallD1</title>
      <para>
	This interface contains general runtime operations, like: reloading, panic mode, default zone handling, getting services and icmp types and their settings.
      </para>

      <refsect3 id="FirewallD1.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry>
            <term><methodname>completeReload</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Reload firewall completely, even netfilter kernel modules.
		This will most likely terminate active connections, because state information is lost.
		This option should only be used in case of severe firewall problems.
		For example if there are state information problems that no connection can be established with correct firewall rules. 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><methodname>enablePanicMode</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Enable panic mode.
		All incoming and outgoing packets are dropped, active connections will expire.
		Enable this only if there are serious problems with your network environment.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><methodname>disablePanicMode</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Disable panic mode.
		After disabling panic mode established connections might work again, if panic mode was enabled for a short period of time. 
              </para>
	      <para>
		Possible errors: NOT_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry>
	    <term><methodname>getDefaultZone</methodname>() &rarr; s</term>
            <listitem><para>Return default zone.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.getIcmpTypeSettings">
            <term><methodname>getIcmpTypeSettings</methodname>(s: <parameter>icmptype</parameter>) &rarr; (sssas)</term>
            <listitem>
              <para>
                Return runtime settings of given <replaceable>icmptype</replaceable>.
                For getting permanent settings see <link linkend="FirewallD1.config.icmptype.Methods.getSettings">org.fedoraproject.FirewallD1.config.icmptype.Methods.getSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (as)</parameter>: array, either empty or containing strings 'ipv4' or 'ipv6', see <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_ICMPTYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.getServiceSettings">
            <term><methodname>getServiceSettings</methodname>(s: <parameter>service</parameter>) &rarr; (sssa(ss)asa{ss})</term>
            <listitem>
              <para>
                Return runtime settings of given <replaceable>service</replaceable>.
                For getting permanent settings see <link linkend="FirewallD1.config.service.Methods.getSettings">org.fedoraproject.FirewallD1.config.service.Methods.getSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>module names</parameter>, dictionary of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>module names (as)</parameter>: array of kernel netfilter helpers, see <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (a{ss})</parameter>: dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'. See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_SERVICE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.getZoneSettings">
            <term><methodname>getZoneSettings</methodname>(s: <parameter>zone</parameter>) &rarr; (sssbsasa(ss)asba(ssss)asasas)</term>
            <listitem>
              <para>
                Return runtime settings of given <replaceable>zone</replaceable>.
                For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, <parameter>UNUSED</parameter>, <parameter>target</parameter>, array of <parameter>services</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>icmp-blocks</parameter>, <parameter>masquerade</parameter>, array of <parameter>forward-ports</parameter> (port, protocol, to-port, to-addr), array of <parameter>interfaces</parameter>, array of <parameter>sources</parameter>, array of <parameter>rich rules</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>UNUSED (b)</parameter>: this boolean value is no longer used for anything.</term></varlistentry>
                  <varlistentry><term><parameter>target (s)</parameter>: see <literal>target</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>services (as)</parameter>: array of service names, see <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>icmp-blocks (as)</parameter>: array of icmp-blocks. See <literal>icmp-block</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>masquerade (b)</parameter>: see <literal>masquerade</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>forward-ports (a(ssss))</parameter>: array of (port, protocol, to-port, to-addr). See <literal>forward-port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>interfaces (as)</parameter>: array of interfaces. See <literal>interface</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>source addresses (as)</parameter>: array of source addresses. See <literal>source</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>rich rules (as)</parameter>: array of rich-language rules. See <literal>rule</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.listIcmpTypes">
            <term><methodname>listIcmpTypes</methodname>() &rarr; as</term>
            <listitem>
              <para>
                Return array of names (s) of icmp types in runtime configuration.
                For permanent configuration see <link linkend="FirewallD1.config.Methods.listIcmpTypes">org.fedoraproject.FirewallD1.config.Methods.listIcmpTypes</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.listServices">
            <term><methodname>listServices</methodname>() &rarr; as</term>
            <listitem>
              <para>
		Return array of service names (s) in runtime configuration.
		For permanent configuration see <link linkend="FirewallD1.config.Methods.listServices">org.fedoraproject.FirewallD1.config.Methods.listServices</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.queryPanicMode">
            <term><methodname>queryPanicMode</methodname>() &rarr; b</term>
            <listitem>
              <para>
		Return true if panic mode is enabled, false otherwise. In panic mode all incoming and outgoing packets are dropped.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.reload">
            <term><methodname>reload</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Reload firewall rules and keep state information.
		Current permanent configuration will become new runtime configuration,
		i.e. all runtime only changes done until reload are lost with
		reload if they have not been also in permanent configuration.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.setDefaultZone">
            <term><methodname>setDefaultZone</methodname>(s: <parameter>zone</parameter>) &rarr; Nothing</term>
            <listitem>
              <para>
		Set default zone for connections and interfaces where no zone has been selected to <replaceable>zone</replaceable>.
		Setting the default zone changes the zone for the connections or interfaces, that are using the default zone.
		This is a runtime and permanent change.
              </para>
	      <para>
		Possible errors: ZONE_ALREADY_SET, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Methods.runtimeToPermanent">
            <term><methodname>runtimeToPermanent</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Make runtime settings permanent. Replaces permanent settings with runtime settings for zones, services, icmptypes, direct and policies (lockdown whitelist).
              </para>
	      <para>
		Possible errors: RT_TO_PERM_FAILED
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.Signals.DefaultZoneChanged">
            <term><methodname>DefaultZoneChanged</methodname>(s: <parameter>zone</parameter>)</term>
            <listitem>
              <para>
		Emitted when default zone has been changed to <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Signals.PanicModeDisabled">
            <term><methodname>PanicModeDisabled</methodname>()</term>
            <listitem>
              <para>
		Emitted when panic mode has been deactivated.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Signals.PanicModeEnabled">
            <term><methodname>PanicModeEnabled</methodname>()</term>
            <listitem>
              <para>
		Emitted when panic mode has been activated.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Signals.Reloaded">
            <term><methodname>Reloaded</methodname>()</term>
            <listitem>
              <para>
		Emitted when firewalld has been reloaded. Also emitted for a complete reload.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.Properties">
        <title>Properties</title>
        <variablelist>
          <varlistentry id="FirewallD1.Properties.BRIDGE">
	    <term><parameter>BRIDGE</parameter> - b - (ro)</term>
            <listitem><para>Indicates whether the firewall has ethernet bridge support.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Properties.IPv4">
            <term><parameter>IPv4</parameter> - b - (ro)</term>
            <listitem><para>Indicates whether the firewall has IPv4 support.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Properties.IPv6">
            <term><parameter>IPv6</parameter> - b - (ro)</term>
            <listitem><para>Indicates whether the firewall has IPv6 support.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Properties.interface_version">
            <term><parameter>interface_version</parameter> - s - (ro)</term>
            <listitem><para>firewalld D-Bus interface version string.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Properties.state">
            <term><parameter>state</parameter> - s - (ro)</term>
            <listitem><para>firewalld state. This can be either <literal>INIT</literal> or <literal>RUNNING</literal>. In <literal>INIT</literal> state, firewalld is starting up and initializing.</para></listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.Properties.version">
            <term><parameter>version</parameter> - s - (ro)</term>
            <listitem><para>firewalld version string.</para></listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.direct">
      <title>org.fedoraproject.FirewallD1.direct</title>
      <para>
	This interface enables more direct access to the firewall.
	It enables runtime manipulation with chains and rules.
	For permanent configuration see <link linkend="FirewallD1.config.direct">org.fedoraproject.FirewallD1.config.direct</link> interface.
      </para>

      <refsect3 id="FirewallD1.direct.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.direct.Methods.addChain">
            <term><methodname>addChain</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a new <replaceable>chain</replaceable> to <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Make sure there's no other chain with this name already.
		There already exist basic chains to use with direct methods, for example <literal>INPUT_direct</literal> chain.
		These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.addChain">org.fedoraproject.FirewallD1.config.direct.Methods.addChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, ALREADY_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.addPassthrough">
            <term><methodname>addPassthrough</methodname>(s: ipv, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a tracked passthrough rule with the arguments <replaceable>args</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.addPassthrough">org.fedoraproject.FirewallD1.config.direct.Methods.addPassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, ALREADY_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.addRule">
            <term><methodname>addRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a rule with the arguments <replaceable>args</replaceable> to <replaceable>chain</replaceable> in <replaceable>table</replaceable> with <replaceable>priority</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		The priority is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down.
		Rules with the same priority are on the same level and the order of these rules is not fixed and may change.
		If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.addRule">org.fedoraproject.FirewallD1.config.direct.Methods.addRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, ALREADY_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.getAllChains">
            <term><methodname>getAllChains</methodname>() &rarr; a(sss)</term>
            <listitem>
              <para>
		Get all chains added to all tables in format: ipv, table, chain.
		This concerns only chains previously added with <methodname>addChain</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>).
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.getAllChains">org.fedoraproject.FirewallD1.config.direct.Methods.getAllChains</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
                  <varlistentry><term><parameter>table (s)</parameter>: one of <literal>filter</literal>, <literal>mangle</literal>, <literal>nat</literal>, <literal>raw</literal>, <literal>security</literal></term></varlistentry>
                  <varlistentry><term><parameter>chain (s)</parameter>: name of a chain.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.getAllPassthroughs">
            <term><methodname>getAllPassthroughs</methodname>() &rarr; a(sas)</term>
            <listitem>
              <para>
		Get all tracked passthrough rules added in all ipv types in format: ipv, rule.
		This concerns only rules previously added with <methodname>addPassthrough</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, array of <parameter>arguments</parameter>).
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.getAllPassthroughs">org.fedoraproject.FirewallD1.config.direct.Methods.getAllPassthroughs</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.getAllRules">
            <term><methodname>getAllRules</methodname>() &rarr; a(sssias)</term>
            <listitem>
              <para>
		Get all rules added to all chains in all tables in format: ipv, table, chain, priority, rule.
		This concerns only rules previously added with <methodname>addRule</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>, <parameter>priority</parameter>, array of <parameter>arguments</parameter>).
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.getAllRules">org.fedoraproject.FirewallD1.config.direct.Methods.getAllRules</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
                  <varlistentry><term><parameter>table (s)</parameter>: one of <literal>filter</literal>, <literal>mangle</literal>, <literal>nat</literal>, <literal>raw</literal>, <literal>security</literal></term></varlistentry>
                  <varlistentry><term><parameter>chain (s)</parameter>: name of a chain.</term></varlistentry>
		  <varlistentry><term><parameter>priority (i)</parameter>: used to order rules.</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.getChains">
            <term><methodname>getChains</methodname>(s: ipv, s: table) &rarr; as</term>
            <listitem>
              <para>
		Return an array of chains (s) added to <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only chains previously added with <methodname>addChain</methodname>.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.getChains">org.fedoraproject.FirewallD1.config.direct.Methods.getChains</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.getRules">
            <term><methodname>getRules</methodname>(s: ipv, s: table, s: chain) &rarr; a(ias)</term>
            <listitem>
              <para>
		Get all rules added to <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
		Return value is a array of (<parameter>priority</parameter>, array of <parameter>arguments</parameter>).
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.getRules">org.fedoraproject.FirewallD1.config.direct.Methods.getRules</link>.
              </para>
              <para>
                <variablelist>
		  <varlistentry><term><parameter>priority (i)</parameter>: used to order rules.</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.queryChain">
            <term><methodname>queryChain</methodname>(s: ipv, s: table, s: chain) &rarr; b</term>
            <listitem>
              <para>
		Return whether a <replaceable>chain</replaceable> exists in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only chains previously added with <methodname>addChain</methodname>.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.queryChain">org.fedoraproject.FirewallD1.config.direct.Methods.queryChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.queryPassthrough">
            <term><methodname>queryPassthrough</methodname>(s: ipv, as: args) &rarr; b</term>
            <listitem>
              <para>
		Return whether a tracked passthrough rule with the arguments <replaceable>args</replaceable> exists for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addPassthrough</methodname>.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.queryPassthrough">org.fedoraproject.FirewallD1.config.direct.Methods.queryPassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.queryRule">
            <term><methodname>queryRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; b</term>
            <listitem>
              <para>
		Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.queryRule">org.fedoraproject.FirewallD1.config.direct.Methods.queryRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.removeChain">
            <term><methodname>removeChain</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a <replaceable>chain</replaceable> from <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only chains previously added with <methodname>addChain</methodname> can be removed this way.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.removeChain">org.fedoraproject.FirewallD1.config.direct.Methods.removeChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, NOT_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.removeRule">
            <term><methodname>removeRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a rule with <replaceable>priority</replaceable> and arguments <replaceable>args</replaceable> from <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only rules previously added with <methodname>addRule</methodname> can be removed this way.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.removeRule">org.fedoraproject.FirewallD1.config.direct.Methods.removeRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, NOT_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.removePassthrough">
            <term><methodname>removePassthrough</methodname>(s: ipv, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a tracked passthrough rule with arguments <replaceable>args</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only rules previously added with <methodname>addPassthrough</methodname> can be removed this way.
		For permanent operation see <link linkend="FirewallD1.config.direct.Methods.removePassthrough">org.fedoraproject.FirewallD1.config.direct.Methods.removePassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, NOT_ENABLED, COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.removeRules">
            <term><methodname>removeRules</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove all rules from <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Methods.passthrough">
            <term><methodname>passthrough</methodname>(s: ipv, as: args) &rarr; s</term>
            <listitem>
              <para>
		Pass a command through to the firewall.
		<replaceable>ipv</replaceable> can be either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables). <replaceable>args</replaceable> can be all <command>iptables</command>, <command>ip6tables</command> and <command>ebtables</command> command line arguments.
		<replaceable>args</replaceable> can be all iptables, ip6tables and ebtables command line arguments.
		 This command is untracked, which means that firewalld is not able to provide information about this command later on.
              </para>
	      <para>
		Possible errors: COMMAND_FAILED
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.direct.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.direct.Signals.ChainAdded">
            <term>ChainAdded(s: ipv, s: table, s: chain)</term>
            <listitem>
              <para>
		Emitted when <replaceable>chain</replaceable> has been added into <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables). 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Signals.ChainRemoved">
            <term>ChainRemoved(s: ipv, s: table, s: chain)</term>
            <listitem>
              <para>
		Emitted when <replaceable>chain</replaceable> has been removed from <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables). 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Signals.PassthroughAdded">
            <term>PassthroughAdded(s: ipv, as: args)</term>
            <listitem>
              <para>
		Emitted when a tracked passthruogh rule with <replaceable>args</replaceable> has been added for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Signals.PassthroughRemoved">
            <term>PassthroughRemoved(s: ipv, as: args)</term>
            <listitem>
              <para>
		Emitted when a tracked passthrough rule with <replaceable>args</replaceable> has been removed for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Signals.RuleAdded">
            <term>RuleAdded(s: ipv, s: table, s: chain, i: priority, as: args)</term>
            <listitem>
              <para>
		Emitted when a rule with <replaceable>args</replaceable> has been added to <replaceable>chain</replaceable> in <replaceable>table</replaceable> with <replaceable>priority</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.direct.Signals.RuleRemoved">
            <term>RuleRemoved(s: ipv, s: table, s: chain, i: priority, as: args)</term>
            <listitem>
              <para>
		Emitted when a rule with <replaceable>args</replaceable> has been removed from <replaceable>chain</replaceable> in <replaceable>table</replaceable> with <replaceable>priority</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.policies">
      <title>org.fedoraproject.FirewallD1.policies</title>
      <para>
	Enables firewalld to be able to lock down configuration changes from local applications.
	Local applications or services are able to change the firewall configuration if they are running as root (example: libvirt).
	With these operations administrator can lock the firewall configuration so that either none or only applications that are in the whitelist are able to request firewall changes.
	For permanent configuration see <link linkend="FirewallD1.config.policies">org.fedoraproject.FirewallD1.config.policies</link> interface.
      </para>

      <refsect3 id="FirewallD1.policies.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.policies.Methods.addLockdownWhitelistCommand">
            <term><methodname>addLockdownWhitelistCommand</methodname>(s: command) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>command</replaceable> to whitelist.
		See <literal>command</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.addLockdownWhitelistCommand">org.fedoraproject.FirewallD1.config.policies.Methods.addLockdownWhitelistCommand</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.addLockdownWhitelistContext">
            <term><methodname>addLockdownWhitelistContext</methodname>(s: context) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>context</replaceable> to whitelist.
		See <literal>selinux</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.addLockdownWhitelistContext">org.fedoraproject.FirewallD1.config.policies.Methods.addLockdownWhitelistContext</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.addLockdownWhitelistUid">
            <term><methodname>addLockdownWhitelistUid</methodname>(i: uid) &rarr; Nothing</term>
            <listitem>
              <para>
		Add user id <replaceable>uid</replaceable> to whitelist.
		See <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.addLockdownWhitelistUid">org.fedoraproject.FirewallD1.config.policies.Methods.addLockdownWhitelistUid</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.addLockdownWhitelistUser">
            <term><methodname>addLockdownWhitelistUser</methodname>(s: user) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>user</replaceable> name to whitelist.
		See <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.addLockdownWhitelistUser">org.fedoraproject.FirewallD1.config.policies.Methods.addLockdownWhitelistUser</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.disableLockdown">
            <term><methodname>disableLockdown</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Disable lockdown.
		This is a runtime and permanent change.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.enableLockdown">
            <term><methodname>enableLockdown</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Enable lockdown.
		Be careful - if the calling application/user is not on lockdown whitelist when you enable lockdown you won't be able to disable it again with the application, you would need to edit firewalld.conf.
		This is a runtime and permanent change.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.getLockdownWhitelistCommands">
            <term><methodname>getLockdownWhitelistCommands</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all command lines (s) that are on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.getLockdownWhitelistCommands">org.fedoraproject.FirewallD1.config.policies.Methods.getLockdownWhitelistCommands</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.getLockdownWhitelistContexts">
            <term><methodname>getLockdownWhitelistContexts</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all contexts (s) that are on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.getLockdownWhitelistContext">org.fedoraproject.FirewallD1.config.policies.Methods.getLockdownWhitelistContext</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.getLockdownWhitelistUids">
            <term><methodname>getLockdownWhitelistUids</methodname>() &rarr; ai</term>
            <listitem>
              <para>
		List all user ids (i) that are on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.getLockdownWhitelistUids">org.fedoraproject.FirewallD1.config.policies.Methods.getLockdownWhitelistUids</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.getLockdownWhitelistUsers">
            <term><methodname>getLockdownWhitelistUsers</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all users (s) that are on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.getLockdownWhitelistUsers">org.fedoraproject.FirewallD1.config.policies.Methods.getLockdownWhitelistUsers</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.queryLockdown">
            <term><methodname>queryLockdown</methodname>() &rarr; b</term>
            <listitem>
              <para>
		Query whether lockdown is enabled.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.queryLockdownWhitelistCommand">
            <term><methodname>queryLockdownWhitelistCommand</methodname>(s: command) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>command</replaceable> is on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.queryLockdownWhitelistCommand">org.fedoraproject.FirewallD1.config.policies.Methods.queryLockdownWhitelistCommand</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.queryLockdownWhitelistContext">
            <term><methodname>queryLockdownWhitelistContext</methodname>(s: context) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>context</replaceable> is on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.queryLockdownWhitelistContext">org.fedoraproject.FirewallD1.config.policies.Methods.queryLockdownWhitelistContext</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.queryLockdownWhitelistUid">
            <term><methodname>queryLockdownWhitelistUid</methodname>(i: uid) &rarr; b</term>
            <listitem>
              <para>
		Query whether user id <replaceable>uid</replaceable> is on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.queryLockdownWhitelistUid">org.fedoraproject.FirewallD1.config.policies.Methods.queryLockdownWhitelistUid</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.queryLockdownWhitelistUser">
            <term><methodname>queryLockdownWhitelistUser</methodname>(s: user) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>user</replaceable> is on whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.queryLockdownWhitelistUser">org.fedoraproject.FirewallD1.config.policies.Methods.queryLockdownWhitelistUser</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.removeLockdownWhitelistCommand">
            <term><methodname>removeLockdownWhitelistCommand</methodname>(s: command) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>command</replaceable> from whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.removeLockdownWhitelistCommand">org.fedoraproject.FirewallD1.config.policies.Methods.removeLockdownWhitelistCommand</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.removeLockdownWhitelistContext">
            <term><methodname>removeLockdownWhitelistContext</methodname>(s: context) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>context</replaceable> from whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.removeLockdownWhitelistContext">org.fedoraproject.FirewallD1.config.policies.Methods.removeLockdownWhitelistContext</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.removeLockdownWhitelistUid">
            <term><methodname>removeLockdownWhitelistUid</methodname>(i: uid) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove user id <replaceable>uid</replaceable> from whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.removeLockdownWhitelistUid">org.fedoraproject.FirewallD1.config.policies.Methods.removeLockdownWhitelistUid</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Methods.removeLockdownWhitelistUser">
            <term><methodname>removeLockdownWhitelistUser</methodname>(s: user) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>user</replaceable> from whitelist.
		For permanent operation see <link linkend="FirewallD1.config.policies.Methods.removeLockdownWhitelistUser">org.fedoraproject.FirewallD1.config.policies.Methods.removeLockdownWhitelistUser</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.policies.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.policies.Signals.LockdownDisabled">
            <term>LockdownDisabled()</term>
            <listitem>
              <para>
		Emitted when lockdown has been disabled.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownEnabled">
            <term>LockdownEnabled()</term>
            <listitem>
              <para>
		Emitted when lockdown has been enabled.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistCommandAdded">
            <term>LockdownWhitelistCommandAdded(s: command)</term>
            <listitem>
              <para>
		Emitted when <replaceable>command</replaceable> has been added to whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistCommandRemoved">
            <term>LockdownWhitelistCommandRemoved(s: command)</term>
            <listitem>
              <para>
		Emitted when <replaceable>command</replaceable> has been removed from whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistContextAdded">
            <term>LockdownWhitelistContextAdded(s: context)</term>
            <listitem>
              <para>
		Emitted when <replaceable>context</replaceable> has been added to whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistContextRemoved">
            <term>LockdownWhitelistContextRemoved(s: context)</term>
            <listitem>
              <para>
		Emitted when <replaceable>context</replaceable> has been removed from whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistUidAdded">
            <term>LockdownWhitelistUidAdded(i: uid)</term>
            <listitem>
              <para>
		Emitted when user id <replaceable>uid</replaceable> has been added to whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistUidRemoved">
            <term>LockdownWhitelistUidRemoved(i: uid)</term>
            <listitem>
              <para>
		Emitted when user id <replaceable>uid</replaceable> has been removed from whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistUserAdded">
            <term>LockdownWhitelistUserAdded(s: user)</term>
            <listitem>
              <para>
		Emitted when <replaceable>user</replaceable> has been added to whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.policies.Signals.LockdownWhitelistUserRemoved">
            <term>LockdownWhitelistUserRemoved(s: user)</term>
            <listitem>
              <para>
		Emitted when <replaceable>user</replaceable> has been removed from whitelist.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.zone">
      <title>org.fedoraproject.FirewallD1.zone</title>
      <para>
	Operations in this interface allows to get, add, remove and query runtime zone's settings.
	For permanent settings see <link linkend="FirewallD1.config.zone">org.fedoraproject.FirewallD1.config.zone</link> interface.
      </para>

      <refsect3 id="FirewallD1.zone.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.zone.Methods.addForwardPort">
            <term><methodname>addForwardPort</methodname>(s: zone, s: port, s: protocol, s: toport, s: toaddr, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Add the IPv4 forward port into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		The port can either be a single port number <replaceable>portid</replaceable> or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>.
		The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
		The destination address is a simple IP address.
		If <replaceable>timeout</replaceable> is non-zero, the operation will be active only for the amount of seconds.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the forward port was added.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL, INVALID_ADDR, INVALID_FORWARD, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addIcmpBlock">
            <term><methodname>addIcmpBlock</methodname>(s: zone, s: icmp, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Add an ICMP block <replaceable>icmp</replaceable> into <replaceable>zone</replaceable>.
		The <replaceable>icmp</replaceable> is the one of the icmp types firewalld supports.
		To get a listing of supported icmp types use <link linkend="FirewallD1.Methods.listIcmpTypes">org.fedoraproject.FirewallD1.Methods.listIcmpTypes</link>
		If <replaceable>zone</replaceable> is empty, use default zone.
		If <replaceable>timeout</replaceable> is non-zero, the operation will be active only for the amount of seconds.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the ICMP block was added.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ICMPTYPE, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addInterface">
            <term><methodname>addInterface</methodname>(s: zone, s: interface) &rarr; s</term>
            <listitem>
              <para>
		Bind <replaceable>interface</replaceable> with <replaceable>zone</replaceable>.
		From now on all traffic going through the <replaceable>interface</replaceable> will respect the <replaceable>zone</replaceable>'s settings.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the interface was bound.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_INTERFACE, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addMasquerade">
            <term><methodname>addMasquerade</methodname>(s: zone, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Enable IPv4 masquerade in <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		If <replaceable>timeout</replaceable> is non-zero, masquerading will be active for the amount of seconds.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone in which the masquerade was enabled.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addPort">
            <term><methodname>addPort</methodname>(s: zone, s: port, s: protocol, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Add port into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		The port can either be a single port number or a port range <replaceable>portid</replaceable>-<replaceable>portid</replaceable>.
		The protocol can either be <literal>tcp</literal> or <literal>udp</literal>.
		If <replaceable>timeout</replaceable> is non-zero, the operation will be active only for the amount of seconds.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the port was added.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addRichRule">
            <term><methodname>addRichRule</methodname>(s: zone, s: rule, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Add rich language <replaceable>rule</replaceable> into <replaceable>zone</replaceable>.
		For the rich language rule syntax, please have a look at <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		If <replaceable>timeout</replaceable> is non-zero, the operation will be active only for the amount of seconds.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the rich language rule was added.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_RULE, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addService">
            <term><methodname>addService</methodname>(s: zone, s: service, i: timeout) &rarr; s</term>
            <listitem>
              <para>
		Add <replaceable>service</replaceable> into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		If <replaceable>timeout</replaceable> is non-zero, the operation will be active only for the amount of seconds.
		To get a list of supported services, use <link linkend="FirewallD1.Methods.listServices">org.fedoraproject.FirewallD1.Methods.listServices</link>.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the service was added.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_SERVICE, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.addSource">
            <term><methodname>addSource</methodname>(s: zone, s: source) &rarr; s</term>
            <listitem>
              <para>
		Bind <replaceable>source</replaceable> with <replaceable>zone</replaceable>.
		From now on all traffic going from this <replaceable>source</replaceable> will respect the <replaceable>zone</replaceable>'s settings.
		A source address or address range is either an IP address or a network IP address with a mask for IPv4 or IPv6.
		For IPv4, the mask can be a network mask or a plain number.
		For IPv6 the mask is a plain number. Use of host names is not supported.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For permanent settings see <link linkend="FirewallD1.config.zone.Methods.update">org.fedoraproject.FirewallD1.config.zone.Methods.update</link>.
              </para>
              <para>
		Returns name of zone to which the source was bound.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ADDR, ALREADY_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.changeZone">
            <term><methodname>changeZone</methodname>(s: zone, s: interface) &rarr; s</term>
            <listitem>
              <para>
		This function is deprecated, use <link linkend="FirewallD1.zone.Methods.changeZoneOfInterface">org.fedoraproject.FirewallD1.zone.Methods.changeZoneOfInterface</link> instead.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.changeZoneOfInterface">
            <term><methodname>changeZoneOfInterface</methodname>(s: zone, s: interface) &rarr; s</term>
            <listitem>
              <para>
		Change a zone an <replaceable>interface</replaceable> is bound to to <replaceable>zone</replaceable>.
		It's basically removeInterface(<replaceable>interface</replaceable>) followed by addInterface(<replaceable>zone</replaceable>, <replaceable>interface</replaceable>).
		If <replaceable>interface</replaceable> has not been bound to a zone before, it behaves like <methodname>addInterface</methodname>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone to which the interface was bound.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, ZONE_ALREADY_SET, ZONE_CONFLICT
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.changeZoneOfSource">
            <term><methodname>changeZoneOfSource</methodname>(s: zone, s: source) &rarr; s</term>
            <listitem>
              <para>
		Change a zone an <replaceable>source</replaceable> is bound to to <replaceable>zone</replaceable>.
		It's basically removeSource(<replaceable>source</replaceable>) followed by addSource(<replaceable>zone</replaceable>, <replaceable>source</replaceable>).
		If <replaceable>source</replaceable> has not been bound to a zone before, it behaves like <methodname>addSource</methodname>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone to which the source was bound.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, ZONE_ALREADY_SET, ZONE_CONFLICT
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getActiveZones">
            <term><methodname>getActiveZones</methodname>() &rarr; a{sa{sas}}</term>
            <listitem>
              <para>
		Return dictionary of currently active zones altogether with interfaces and sources used in these zones.
		Active zones are zones, that have a binding to an interface or source.
              </para>
              <para>
		Return value is a dictionary where keys are zone names (s) and values are again dictionaries where keys are either 'interfaces' or 'sources' and values are arrays of interface names (s) or sources (s).
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getForwardPorts">
            <term><methodname>getForwardPorts</methodname>(s: zone) &rarr; aas</term>
            <listitem>
              <para>
		Return array of IPv4 forward ports previously added into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
              <para>
		Return value is array of 4-tuples, where each 4-tuple consists of (port, protocol, to-port, to-addr). to-addr might be empty in case of local forwarding.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getIcmpBlocks">
            <term><methodname>getIcmpBlocks</methodname>(s: zone) &rarr; as</term>
            <listitem>
              <para>
		Return array of ICMP type (s) blocks previously added into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getInterfaces">
            <term><methodname>getInterfaces</methodname>(s: zone) &rarr; as</term>
            <listitem>
              <para>
		Return array of interfaces (s) previously bound with <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getPorts">
            <term><methodname>getPorts</methodname>(s: zone) &rarr; aas</term>
            <listitem>
              <para>
		Return array of ports (2-tuple of port and protocol) previously enabled in <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getRichRules">
            <term><methodname>getRichRules</methodname>(s: zone) &rarr; as</term>
            <listitem>
              <para>
		Return array of rich language rules (s) previously added into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getServices">
            <term><methodname>getServices</methodname>(s: zone) &rarr; as</term>
            <listitem>
              <para>
		Return array of services (s) previously enabled in <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getSources">
            <term><methodname>getSources</methodname>(s: zone) &rarr; as</term>
            <listitem>
              <para>
		Return array of sources (s) previously bound with <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
		For getting permanent settings see <link linkend="FirewallD1.config.zone.Methods.getSettings">org.fedoraproject.FirewallD1.config.zone.Methods.getSettings</link>.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getZoneOfInterface">
            <term><methodname>getZoneOfInterface</methodname>(s: interface) &rarr; s</term>
            <listitem>
              <para>
		Return name (s) of zone the <replaceable>interface</replaceable> is bound to or empty string.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getZoneOfSource">
            <term><methodname>getZoneOfSource</methodname>(s: source) &rarr; s</term>
            <listitem>
              <para>
		Return name (s) of zone the <replaceable>source</replaceable> is bound to or empty string.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.getZones">
            <term><methodname>getZones</methodname>() &rarr; as</term>
            <listitem>
              <para>
		Return array of names (s) of predefined zones known to current runtime environment.
		For list of zones known to permanent environment see <link linkend="FirewallD1.config.Methods.listZones">org.fedoraproject.FirewallD1.config.Methods.listZones</link>.
		The lists (of zones known to runtime and permanent environment) will contain same zones in most cases,
		but might differ for example if <link linkend="FirewallD1.config.Methods.addZone">org.fedoraproject.FirewallD1.config.Methods.addZone</link> has been called recently, but firewalld has not been reloaded since then.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.isImmutable">
            <term><methodname>isImmutable</methodname>(s: zone) &rarr; b</term>
            <listitem>
              <para>
		Deprecated.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryForwardPort">
            <term><methodname>queryForwardPort</methodname>(s: zone, s: port, s: protocol, s: toport, s: toaddr) &rarr; b</term>
            <listitem>
              <para>
		Return whether the IPv4 forward port (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>, <replaceable>toport</replaceable>, <replaceable>toaddr</replaceable>) has been added into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL, INVALID_ADDR, INVALID_FORWARD
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryIcmpBlock">
            <term><methodname>queryIcmpBlock</methodname>(s: zone, s: icmp) &rarr; b</term>
            <listitem>
              <para>
		Return whether an ICMP block for <replaceable>icmp</replaceable> has been added into <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ICMPTYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryInterface">
            <term><methodname>queryInterface</methodname>(s: zone, s: interface) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>interface</replaceable> has been bound to <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_INTERFACE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryMasquerade">
            <term><methodname>queryMasquerade</methodname>(s: zone) &rarr; b</term>
            <listitem>
              <para>
		Return whether IPv4 masquerading has been enabled in <replaceable>zone</replaceable>
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryPort">
            <term><methodname>queryPort</methodname>(s: zone, s: port, s: protocol) &rarr; b</term>
            <listitem>
              <para>
		Return whether <replaceable>port</replaceable>/<replaceable>protocol</replaceable> has been added in <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryRichRule">
            <term><methodname>queryRichRule</methodname>(s: zone, s: rule) &rarr; b</term>
            <listitem>
              <para>
		Return whether rich rule <replaceable>rule</replaceable> has been added in <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_RULE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.queryService">
            <term><methodname>queryService</methodname>(s: zone, s: service) &rarr; b</term>
            <listitem>
              <para>
		Return whether <replaceable>service</replaceable> has been added for <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_SERVICE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.querySource">
            <term><methodname>querySource</methodname>(s: zone, s: source) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>source</replaceable>has been bound to <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ADDR
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeForwardPort">
            <term><methodname>removeForwardPort</methodname>(s: zone, s: port, s: protocol, s: toport, s: toaddr) &rarr; s</term>
            <listitem>
              <para>
		Remove IPv4 forward port ((<replaceable>port</replaceable>, <replaceable>protocol</replaceable>, <replaceable>toport</replaceable>, <replaceable>toaddr</replaceable>)) from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone from which the forward port was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL, INVALID_ADDR, INVALID_FORWARD, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeIcmpBlock">
            <term><methodname>removeIcmpBlock</methodname>(s: zone, s: icmp) &rarr; s</term>
            <listitem>
              <para>
		Remove ICMP block <replaceable>icmp</replaceable> from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone from which the ICMP block was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ICMPTYPE, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeInterface">
            <term><methodname>removeInterface</methodname>(s: zone, s: interface) &rarr; s</term>
            <listitem>
              <para>
		Remove binding of <replaceable>interface</replaceable> from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, the interface will be removed from zone it belongs to.
              </para>
              <para>
		Returns name of zone from which the <replaceable>interface</replaceable> was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_INTERFACE, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeMasquerade">
            <term><methodname>removeMasquerade</methodname>(s: zone) &rarr; s</term>
            <listitem>
              <para>
		Disable IPv4 masquerade for <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone for which the masquerade was disabled.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removePort">
            <term><methodname>removePort</methodname>(s: zone, s: port, s: protocol) &rarr; s</term>
            <listitem>
              <para>
		Remove port/protocol from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone from which the port was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_PORT, MISSING_PROTOCOL, INVALID_PROTOCOL, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeRichRule">
            <term><methodname>removeRichRule</methodname>(s: zone, s: rule) &rarr; s</term>
            <listitem>
              <para>
		Remove rich language <replaceable>rule</replaceable> from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone from which the rich language rule was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_RULE, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeService">
            <term><methodname>removeService</methodname>(s: zone, s: service) &rarr; s</term>
            <listitem>
              <para>
		Remove <replaceable>service</replaceable> from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, use default zone.
              </para>
              <para>
		Returns name of zone from which the service was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_SERVICE, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Methods.removeSource">
            <term><methodname>removeSource</methodname>(s: zone, s: source) &rarr; s</term>
            <listitem>
              <para>
		Remove binding of <replaceable>source</replaceable> from <replaceable>zone</replaceable>.
		If <replaceable>zone</replaceable> is empty, the source will be removed from zone it belongs to.
              </para>
              <para>
		Returns name of zone from which the <replaceable>source</replaceable> was removed.
              </para>
	      <para>
		Possible errors: INVALID_ZONE, INVALID_ADDR, NOT_ENABLED, INVALID_COMMAND
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.zone.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.zone.Signals.ForwardPortAdded">
            <term>ForwardPortAdded(s: zone, s: port, s: protocol, s: toport, s: toaddr, i: timeout)</term>
            <listitem>
              <para>
		Emitted when forward port has been added to <replaceable>zone</replaceable> with <replaceable>timeout</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ForwardPortRemoved">
            <term>ForwardPortRemoved(s: zone, s: port, s: protocol, s: toport, s: toaddr)</term>
            <listitem>
              <para>
		Emitted when forward port has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.IcmpBlockAdded">
            <term>IcmpBlockAdded(s: zone, s: icmp, i: timeout)</term>
            <listitem>
              <para>
		Emitted when ICMP block for <replaceable>icmp</replaceable> has been added to <replaceable>zone</replaceable> with <replaceable>timeout</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.IcmpBlockRemoved">
            <term>IcmpBlockRemoved(s: zone, s: icmp)</term>
            <listitem>
              <para>
		Emitted when ICMP block for <replaceable>icmp</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.InterfaceAdded">
            <term>InterfaceAdded(s: zone, s: interface)</term>
            <listitem>
              <para>
		Emitted when <replaceable>interface</replaceable> has been added to <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.InterfaceRemoved">
            <term>InterfaceRemoved(s: zone, s: interface)</term>
            <listitem>
              <para>
		Emitted when <replaceable>interface</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.MasqueradeAdded">
            <term>MasqueradeAdded(s: zone, i: timeout)</term>
            <listitem>
              <para>
		Emitted when IPv4 masquerade has been enabled for <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.MasqueradeRemoved">
            <term>MasqueradeRemoved(s: zone)</term>
            <listitem>
              <para>
		Emitted when IPv4 masquerade has been disabled for <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.PortAdded">
            <term>PortAdded(s: zone, s: port, s: protocol, i: timeout)</term>
            <listitem>
              <para>
		Emitted when <replaceable>port</replaceable>/<replaceable>protocol</replaceable> has been added to <replaceable>zone</replaceable> with <replaceable>timeout</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.PortRemoved">
            <term>PortRemoved(s: zone, s: port, s: protocol)</term>
            <listitem>
              <para>
		Emitted when <replaceable>port</replaceable>/<replaceable>protocol</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.RichRuleAdded">
            <term>RichRuleAdded(s: zone, s: rule, i: timeout)</term>
            <listitem>
              <para>
		Emitted when rich language <replaceable>rule</replaceable> has been added to <replaceable>zone</replaceable> with <replaceable>timeout</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.RichRuleRemoved">
            <term>RichRuleRemoved(s: zone, s: rule)</term>
            <listitem>
              <para>
		Emitted when rich language <replaceable>rule</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ServiceAdded">
            <term>ServiceAdded(s: zone, s: service, i: timeout)</term>
            <listitem>
              <para>
		Emitted when <replaceable>service</replaceable> has been added to <replaceable>zone</replaceable> with <replaceable>timeout</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ServiceRemoved">
            <term>ServiceRemoved(s: zone, s: service)</term>
            <listitem>
              <para>
		Emitted when <replaceable>service</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.SourceAdded">
            <term>SourceAdded(s: zone, s: source)</term>
            <listitem>
              <para>
		Emitted when <replaceable>source</replaceable> has been added to <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.SourceRemoved">
            <term>SourceRemoved(s: zone, s: source)</term>
            <listitem>
              <para>
		Emitted when <replaceable>source</replaceable> has been removed from <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ZoneChanged">
            <term>ZoneChanged(s: zone, s: interface)</term>
            <listitem>
              <para>
		Deprecated
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ZoneOfInterfaceChanged">
            <term>ZoneOfInterfaceChanged(s: zone, s: interface)</term>
            <listitem>
              <para>
		Emitted when a zone an <replaceable>interface</replaceable> is part of has been changed to <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.zone.Signals.ZoneOfSourceChanged">
            <term>ZoneOfSourceChanged(s: zone, s: source)</term>
            <listitem>
              <para>
		Emitted when a zone an <replaceable>source</replaceable> is part of has been changed to <replaceable>zone</replaceable>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config">
      <title>org.fedoraproject.FirewallD1.config</title>
      <para>
	Allows to permanently add, remove and query zones, services and icmp types.
      </para>

      <refsect3 id="FirewallD1.config.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.Methods.addIcmpType">
            <term><methodname>addIcmpType</methodname>(s: icmptype, (sssas): settings) &rarr; o</term>
            <listitem>
              <para>
		Add <replaceable>icmptype</replaceable> with given <replaceable>settings</replaceable> into permanent configuration.
		Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>destinations</parameter>.
		Returns object path of the new icmp type.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (as)</parameter>: array, either empty or containing strings 'ipv4' or 'ipv6', see <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: NAME_CONFLICT, INVALID_NAME, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.addService">
            <term><methodname>addService</methodname>(s: service, (sssa(ss)asa{ss}): settings) &rarr; o</term>
            <listitem>
              <para>
		Add <replaceable>service</replaceable> with given <replaceable>settings</replaceable> into permanent configuration.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>module names</parameter>, dictionary of <parameter>destinations</parameter>.
		Returns object path of the new icmp type.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>module names (as)</parameter>: array of kernel netfilter helpers, see <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (a{ss})</parameter>: dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'. See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: NAME_CONFLICT, INVALID_NAME, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.addZone">
            <term><methodname>addZone</methodname>(s: zone, (sssbsasa(ss)asba(ssss)asasas): settings) &rarr; o</term>
            <listitem>
              <para>
		Add <replaceable>zone</replaceable> with given <replaceable>settings</replaceable> into permanent configuration.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, <parameter>UNUSED</parameter>, <parameter>target</parameter>, array of <parameter>services</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>icmp-blocks</parameter>, <parameter>masquerade</parameter>, array of <parameter>forward-ports</parameter> (port, protocol, to-port, to-addr), array of <parameter>interfaces</parameter>, array of <parameter>sources</parameter>, array of <parameter>rich rules</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>UNUSED (b)</parameter>: this boolean value is no longer used for anything.</term></varlistentry>
                  <varlistentry><term><parameter>target (s)</parameter>: see <literal>target</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>services (as)</parameter>: array of service names, see <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>icmp-blocks (as)</parameter>: array of icmp-blocks. See <literal>icmp-block</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>masquerade (b)</parameter>: see <literal>masquerade</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>forward-ports (a(ssss))</parameter>: array of (port, protocol, to-port, to-addr). See <literal>forward-port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>interfaces (as)</parameter>: array of interfaces. See <literal>interface</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>source addresses (as)</parameter>: array of source addresses. See <literal>source</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>rich rules (as)</parameter>: array of rich-language rules. See <literal>rule</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: NAME_CONFLICT, INVALID_NAME, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.getIcmpTypeByName">
            <term><methodname>getIcmpTypeByName</methodname>(s: icmptype) &rarr; o</term>
            <listitem>
              <para>
		Return object path (permanent configuration) of <replaceable>icmptype</replaceable> with given name.
              </para>
	      <para>
		Possible errors: INVALID_ICMPTYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.getServiceByName">
            <term><methodname>getServiceByName</methodname>(s: service) &rarr; o</term>
            <listitem>
              <para>
		Return object path (permanent configuration) of <replaceable>service</replaceable> with given name.
              </para>
	      <para>
		Possible errors: INVALID_SERVICE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.getZoneByName">
            <term><methodname>getZoneByName</methodname>(s: zone) &rarr; o</term>
            <listitem>
              <para>
		Return object path (permanent configuration) of <replaceable>zone</replaceable> with given name.
              </para>
	      <para>
		Possible errors: INVALID_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.getZoneOfInterface">
            <term><methodname>getZoneOfInterface</methodname>(s: iface) &rarr; s</term>
            <listitem>
              <para>
		Return name of zone the <replaceable>iface</replaceable> is bound to or empty string.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.getZoneOfSource">
            <term><methodname>getZoneOfSource</methodname>(s: source) &rarr; s</term>
            <listitem>
              <para>
		Return name of zone the <replaceable>source</replaceable> is bound to or empty string.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.listIcmpTypes">
            <term><methodname>listIcmpTypes</methodname>() &rarr; ao</term>
            <listitem>
              <para>
                Return array of object paths (o) of <link linkend="FirewallD1.config.icmptype">icmp types</link> in permanent configuration.
                For runtime configuration see <link linkend="FirewallD1.Methods.listIcmpTypes">org.fedoraproject.FirewallD1.Methods.listIcmpTypes</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.listServices">
            <term><methodname>listServices</methodname>() &rarr; ao</term>
            <listitem>
              <para>
		Return array of objects paths (o) of <link linkend="FirewallD1.config.service">services</link> in permanent configuration.
		For runtime configuration see <link linkend="FirewallD1.Methods.listServices">org.fedoraproject.FirewallD1.Methods.listServices</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Methods.listZones">
            <term><methodname>listZones</methodname>() &rarr; ao</term>
            <listitem>
              <para>
		List object paths of zones known to permanent environment.
		For list of zones known to runtime environment see <link linkend="FirewallD1.zone.Methods.getZones">org.fedoraproject.FirewallD1.zone.Methods.getZones</link>.
		The lists (of zones known to runtime and permanent environment) will contain same zones in most cases,
		but might differ for example if <link linkend="FirewallD1.config.Methods.addZone">org.fedoraproject.FirewallD1.config.Methods.addZone</link> has been called recently, but firewalld has not been reloaded since then.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.Signals.IcmpTypeAdded">
            <term>IcmpTypeAdded(s: icmptype)</term>
            <listitem>
              <para>
		Emitted when <replaceable>icmptype</replaceable> has been added.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Signals.ServiceAdded">
            <term>ServiceAdded(s: service)</term>
            <listitem>
              <para>
		Emitted when <replaceable>service</replaceable> has been added.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Signals.ZoneAdded">
            <term>ZoneAdded(s: zone)</term>
            <listitem>
              <para>
		Emitted when <replaceable>zone</replaceable> has been added.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.Properties">
        <title>Properties</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.Properties.CleanupOnExit">
            <term>CleanupOnExit - s - (rw)</term>
            <listitem>
              <para>
		If firewalld stops, it cleans up all firewall rules. Setting this option to no or false leaves the current firewall rules untouched.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Properties.DefaultZone">
            <term>DefaultZone - s - (ro)</term>
            <listitem>
              <para>
		Default zone for connections or interfaces if the zone is not selected or specified by NetworkManager, initscripts or command line tool.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Properties.Lockdown">
            <term>Lockdown - s - (rw)</term>
            <listitem>
              <para>
		If this property is enabled, firewall changes with the D-Bus interface will be limited to applications that are listed in the lockdown whitelist.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.Properties.MinimalMark">
            <term>MinimalMark - i - (rw)</term>
            <listitem>
              <para>
		For some firewall settings several rules are needed in different tables to be able to handle packets in the correct way.
		To achieve that these packets are marked using the MARK target. With the MinimalMark property a block of marks can be reserved for private use; only marks over this value are used.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config.direct">
      <title>org.fedoraproject.FirewallD1.config.direct</title>
      <para>
	Interface for permanent direct configuration, see also <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
	For runtime direct configuration see <link linkend="FirewallD1.direct">org.fedoraproject.FirewallD1.direct</link> interface.
      </para>

      <refsect3 id="FirewallD1.config.direct.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.direct.Methods.getSettings">
            <term><methodname>getSettings</methodname>() &rarr; (a(sss)a(sssias)a(sas))</term>
            <listitem>
              <para>
		Get settings of permanent direct configuration in format: array of <parameter>chains</parameter>, array of <parameter>rules</parameter>, array of <parameter>passthroughs</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>chains (a(sss))</parameter>: array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>), see 'chain' in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                  <varlistentry><term><parameter>rules (a(sssias))</parameter>: array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>, <parameter>priority</parameter>, array of <parameter>arguments</parameter>), see 'rule' in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                  <varlistentry><term><parameter>passthroughs (a(sas))</parameter>: array of (<parameter>ipv</parameter>, array of <parameter>arguments</parameter>), see passthrough in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.update">
            <term><methodname>update</methodname>((a(sss)a(sssias)a(sas)): settings) &rarr; Nothing</term>
            <listitem>
              <para>
		Update permanent direct configuration with given <replaceable>settings</replaceable>.
		Settings are in format: array of <parameter>chains</parameter>, array of <parameter>rules</parameter>, array of <parameter>passthroughs</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>chains (a(sss))</parameter>: array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>), see 'chain' in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                  <varlistentry><term><parameter>rules (a(sssias))</parameter>: array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>, <parameter>priority</parameter>, array of <parameter>arguments</parameter>), see 'rule' in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                  <varlistentry><term><parameter>passthroughs (a(sas))</parameter>: array of (<parameter>ipv</parameter>, array of <parameter>arguments</parameter>), see passthrough in <citerefentry><refentrytitle>firewalld.direct</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>.
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.addChain">
            <term><methodname>addChain</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a new <replaceable>chain</replaceable> to <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Make sure there's no other chain with this name already.
		There already exist basic chains to use with direct methods, for example <literal>INPUT_direct</literal> chain.
		These chains are jumped into before chains for zones, i.e. every rule put into <literal>INPUT_direct</literal> will be checked before rules in zones.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.addChain">org.fedoraproject.FirewallD1.direct.Methods.addChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.addPassthrough">
            <term><methodname>addPassthrough</methodname>(s: ipv, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a passthrough rule with the arguments <replaceable>args</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		For runtime operation see <link linkend="FirewallD1.direct.Methods.addPassthrough">org.fedoraproject.FirewallD1.direct.Methods.addPassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.addRule">
            <term><methodname>addRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Add a rule with the arguments <replaceable>args</replaceable> to <replaceable>chain</replaceable> in <replaceable>table</replaceable> with <replaceable>priority</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		The priority is used to order rules. Priority 0 means add rule on top of the chain, with a higher priority the rule will be added further down.
		Rules with the same priority are on the same level and the order of these rules is not fixed and may change.
		If you want to make sure that a rule will be added after another one, use a low priority for the first and a higher for the following.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.addRule">org.fedoraproject.FirewallD1.direct.Methods.addRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.getAllChains">
            <term><methodname>getAllChains</methodname>() &rarr; a(sss)</term>
            <listitem>
              <para>
		Get all chains added to all tables in format: ipv, table, chain.
		This concerns only chains previously added with <methodname>addChain</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>).
		For runtime operation see <link linkend="FirewallD1.direct.Methods.getAllChains">org.fedoraproject.FirewallD1.direct.Methods.getAllChains</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
                  <varlistentry><term><parameter>table (s)</parameter>: one of <literal>filter</literal>, <literal>mangle</literal>, <literal>nat</literal>, <literal>raw</literal>, <literal>security</literal></term></varlistentry>
                  <varlistentry><term><parameter>chain (s)</parameter>: name of a chain.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.getAllPassthroughs">
            <term><methodname>getAllPassthroughs</methodname>() &rarr; a(sas)</term>
            <listitem>
              <para>
		Get all passthrough rules added in all ipv types in format: ipv, rule.
		This concerns only rules previously added with <methodname>addPassthrough</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, array of <parameter>arguments</parameter>).
		For runtime operation see <link linkend="FirewallD1.direct.Methods.getAllPassthroughs">org.fedoraproject.FirewallD1.direct.Methods.getAllPassthroughs</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.getAllRules">
            <term><methodname>getAllRules</methodname>() &rarr; a(sssias)</term>
            <listitem>
              <para>
		Get all rules added to all chains in all tables in format: ipv, table, chain, priority, rule.
		This concerns only rules previously added with <methodname>addRule</methodname>.
		Return value is a array of (<parameter>ipv</parameter>, <parameter>table</parameter>, <parameter>chain</parameter>, <parameter>priority</parameter>, array of <parameter>arguments</parameter>).
		For runtime operation see <link linkend="FirewallD1.direct.Methods.getAllRules">org.fedoraproject.FirewallD1.direct.Methods.getAllRules</link>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>ipv (s)</parameter>: either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).</term></varlistentry>
                  <varlistentry><term><parameter>table (s)</parameter>: one of <literal>filter</literal>, <literal>mangle</literal>, <literal>nat</literal>, <literal>raw</literal>, <literal>security</literal></term></varlistentry>
                  <varlistentry><term><parameter>chain (s)</parameter>: name of a chain.</term></varlistentry>
		  <varlistentry><term><parameter>priority (i)</parameter>: used to order rules.</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.getChains">
            <term><methodname>getChains</methodname>(s: ipv, s: table) &rarr; as</term>
            <listitem>
              <para>
		Return an array of chains (s) added to <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only chains previously added with <methodname>addChain</methodname>.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.getChains">org.fedoraproject.FirewallD1.direct.Methods.getChains</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.getRules">
            <term><methodname>getRules</methodname>(s: ipv, s: table, s: chain) &rarr; a(ias)</term>
            <listitem>
              <para>
		Get all rules added to <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
		Return value is a array of (<parameter>priority</parameter>, array of <parameter>arguments</parameter>).
		For runtime operation see <link linkend="FirewallD1.direct.Methods.getRules">org.fedoraproject.FirewallD1.direct.Methods.getRules</link>.
              </para>
              <para>
                <variablelist>
		  <varlistentry><term><parameter>priority (i)</parameter>: used to order rules.</term></varlistentry>
		  <varlistentry><term><parameter>arguments (as)</parameter>: array of commands, parameters and other iptables/ip6tables/ebtables command line options.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.queryChain">
            <term><methodname>queryChain</methodname>(s: ipv, s: table, s: chain) &rarr; b</term>
            <listitem>
              <para>
		Return whether a <replaceable>chain</replaceable> exists in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only chains previously added with <methodname>addChain</methodname>.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.queryChain">org.fedoraproject.FirewallD1.direct.Methods.queryChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.queryPassthrough">
            <term><methodname>queryPassthrough</methodname>(s: ipv, as: args) &rarr; b</term>
            <listitem>
              <para>
		Return whether a tracked passthrough rule with the arguments <replaceable>args</replaceable> exists for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addPassthrough</methodname>.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.queryPassthrough">org.fedoraproject.FirewallD1.direct.Methods.queryPassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.queryRule">
            <term><methodname>queryRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; b</term>
            <listitem>
              <para>
		Return whether a rule with <replaceable>priority</replaceable> and the arguments <replaceable>args</replaceable> exists in <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.queryRule">org.fedoraproject.FirewallD1.direct.Methods.queryRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.removeChain">
            <term><methodname>removeChain</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a <replaceable>chain</replaceable> from <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only chains previously added with <methodname>addChain</methodname> can be removed this way.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.removeChain">org.fedoraproject.FirewallD1.direct.Methods.removeChain</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.removeRule">
            <term><methodname>removeRule</methodname>(s: ipv, s: table, s: chain, i: priority, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a rule with <replaceable>priority</replaceable> and arguments <replaceable>args</replaceable> from <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only rules previously added with <methodname>addRule</methodname> can be removed this way.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.removeRule">org.fedoraproject.FirewallD1.direct.Methods.removeRule</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE, NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.removePassthrough">
            <term><methodname>removePassthrough</methodname>(s: ipv, as: args) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove a passthrough rule with arguments <replaceable>args</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		Only rules previously added with <methodname>addPassthrough</methodname> can be removed this way.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.removePassthrough">org.fedoraproject.FirewallD1.direct.Methods.removePassthrough</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.direct.Methods.removeRules">
            <term><methodname>removeRules</methodname>(s: ipv, s: table, s: chain) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove all rules from <replaceable>chain</replaceable> in <replaceable>table</replaceable> for <replaceable>ipv</replaceable> being either <literal>ipv4</literal> (iptables) or <literal>ipv6</literal> (ip6tables) or <literal>eb</literal> (ebtables).
		This concerns only rules previously added with <methodname>addRule</methodname>.
		For runtime operation see <link linkend="FirewallD1.direct.Methods.removeRules">org.fedoraproject.FirewallD1.direct.Methods.removeRules</link>.
              </para>
	      <para>
		Possible errors: INVALID_IPV, INVALID_TABLE
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.direct.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.direct.Signals.Updated">
            <term>Updated()</term>
            <listitem>
              <para>
		Emitted when configuration has been updated.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config.policies">
      <title>org.fedoraproject.FirewallD1.config.policies</title>
      <para>
	Interface for permanent lockdown-whitelist configuration, see also <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
	For runtime configuration see <link linkend="FirewallD1.policies">org.fedoraproject.FirewallD1.policies</link> interface.
      </para>
      <refsect3 id="FirewallD1.config.policies.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.policies.Methods.getLockdownWhitelist">
            <term><methodname>getLockdownWhitelist</methodname>() &rarr; (asasasai)</term>
            <listitem>
              <para>
		Get settings of permanent lockdown-whitelist configuration in format: <parameter>commands</parameter>, <parameter>selinux contexts</parameter>, <parameter>users</parameter>, <parameter>uids</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>commands (as)</parameter>: see <literal>command</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>selinux contexts (as)</parameter>: see <literal>selinux</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>users (as)</parameter>: see <literal>name</literal> attribute of <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>uids (ai)</parameter>: see <literal>id</literal> attribute of <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.setLockdownWhitelist">
            <term><methodname>setLockdownWhitelist</methodname>((asasasai): settings) &rarr; Nothing</term>
            <listitem>
              <para>
		Set permanent lockdown-whitelist configuration to <replaceable>settings</replaceable>.
		Settings are in format: <parameter>commands</parameter>, <parameter>selinux contexts</parameter>, <parameter>users</parameter>, <parameter>uids</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>commands (as)</parameter>: see <literal>command</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>selinux contexts (as)</parameter>: see <literal>selinux</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>users (as)</parameter>: see <literal>name</literal> attribute of <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>uids (ai)</parameter>: see <literal>id</literal> attribute of <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.addLockdownWhitelistCommand">
            <term><methodname>addLockdownWhitelistCommand</methodname>(s: command) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>command</replaceable> to whitelist.
		See <literal>command</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.addLockdownWhitelistCommand">org.fedoraproject.FirewallD1.policies.Methods.addLockdownWhitelistCommand</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.addLockdownWhitelistContext">
            <term><methodname>addLockdownWhitelistContext</methodname>(s: context) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>context</replaceable> to whitelist.
		See <literal>selinux</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.addLockdownWhitelistContext">org.fedoraproject.FirewallD1.policies.Methods.addLockdownWhitelistContext</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.addLockdownWhitelistUid">
            <term><methodname>addLockdownWhitelistUid</methodname>(i: uid) &rarr; Nothing</term>
            <listitem>
              <para>
		Add user id <replaceable>uid</replaceable> to whitelist.
		See <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.addLockdownWhitelistUid">org.fedoraproject.FirewallD1.policies.Methods.addLockdownWhitelistUid</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.addLockdownWhitelistUser">
            <term><methodname>addLockdownWhitelistUser</methodname>(s: user) &rarr; Nothing</term>
            <listitem>
              <para>
		Add <replaceable>user</replaceable> name to whitelist.
		See <literal>user</literal> option in <citerefentry><refentrytitle>firewalld.lockdown-whitelist</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.addLockdownWhitelistUser">org.fedoraproject.FirewallD1.policies.Methods.addLockdownWhitelistUser</link>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED, INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.getLockdownWhitelistCommands">
            <term><methodname>getLockdownWhitelistCommands</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all command lines (s) that are on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.getLockdownWhitelistCommands">org.fedoraproject.FirewallD1.policies.Methods.getLockdownWhitelistCommands</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.getLockdownWhitelistContexts">
            <term><methodname>getLockdownWhitelistContexts</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all contexts (s) that are on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.getLockdownWhitelistContexts">org.fedoraproject.FirewallD1.policies.Methods.getLockdownWhitelistContexts</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.getLockdownWhitelistUids">
            <term><methodname>getLockdownWhitelistUids</methodname>() &rarr; ai</term>
            <listitem>
              <para>
		List all user ids (i) that are on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.getLockdownWhitelistUids">org.fedoraproject.FirewallD1.policies.Methods.getLockdownWhitelistUids</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.getLockdownWhitelistUsers">
            <term><methodname>getLockdownWhitelistUsers</methodname>() &rarr; as</term>
            <listitem>
              <para>
		List all users (s) that are on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.getLockdownWhitelistUsers">org.fedoraproject.FirewallD1.policies.Methods.getLockdownWhitelistUsers</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.queryLockdownWhitelistCommand">
            <term><methodname>queryLockdownWhitelistCommand</methodname>(s: command) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>command</replaceable> is on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.queryLockdownWhitelistCommand">org.fedoraproject.FirewallD1.policies.Methods.queryLockdownWhitelistCommand</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.queryLockdownWhitelistContext">
            <term><methodname>queryLockdownWhitelistContext</methodname>(s: context) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>context</replaceable> is on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.queryLockdownWhitelistContext">org.fedoraproject.FirewallD1.policies.Methods.queryLockdownWhitelistContext</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.queryLockdownWhitelistUid">
            <term><methodname>queryLockdownWhitelistUid</methodname>(i: uid) &rarr; b</term>
            <listitem>
              <para>
		Query whether user id <replaceable>uid</replaceable> is on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.queryLockdownWhitelistUid">org.fedoraproject.FirewallD1.policies.Methods.queryLockdownWhitelistUid</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.queryLockdownWhitelistUser">
            <term><methodname>queryLockdownWhitelistUser</methodname>(s: user) &rarr; b</term>
            <listitem>
              <para>
		Query whether <replaceable>user</replaceable> is on whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.queryLockdownWhitelistUser">org.fedoraproject.FirewallD1.policies.Methods.queryLockdownWhitelistUser</link>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.removeLockdownWhitelistCommand">
            <term><methodname>removeLockdownWhitelistCommand</methodname>(s: command) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>command</replaceable> from whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.removeLockdownWhitelistCommand">org.fedoraproject.FirewallD1.policies.Methods.removeLockdownWhitelistCommand</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.removeLockdownWhitelistContext">
            <term><methodname>removeLockdownWhitelistContext</methodname>(s: context) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>context</replaceable> from whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.removeLockdownWhitelistContext">org.fedoraproject.FirewallD1.policies.Methods.removeLockdownWhitelistContext</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.removeLockdownWhitelistUid">
            <term><methodname>removeLockdownWhitelistUid</methodname>(i: uid) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove user id <replaceable>uid</replaceable> from whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.removeLockdownWhitelistUid">org.fedoraproject.FirewallD1.policies.Methods.removeLockdownWhitelistUid</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.policies.Methods.removeLockdownWhitelistUser">
            <term><methodname>removeLockdownWhitelistUser</methodname>(s: user) &rarr; Nothing</term>
            <listitem>
              <para>
		Remove <replaceable>user</replaceable> from whitelist.
		For runtime operation see <link linkend="FirewallD1.policies.Methods.removeLockdownWhitelistUser">org.fedoraproject.FirewallD1.policies.Methods.removeLockdownWhitelistUser</link>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.policies.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.policies.Signals.LockdownWhitelistUpdated">
            <term>LockdownWhitelistUpdated()</term>
            <listitem>
              <para>
		Emitted when permanent lockdown-whitelist configuration has been updated.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config.zone">
      <title>org.fedoraproject.FirewallD1.config.zone</title>
      <para>
	Interface for permanent zone configuration, see also <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
      </para>
      <refsect3 id="FirewallD1.config.zone.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.zone.Methods.getSettings">
            <term><methodname>getSettings</methodname>() &rarr; (sssbsasa(ss)asba(ssss)asasas)</term>
            <listitem>
              <para>
                Return permanent settings of given <replaceable>zone</replaceable>.
                For getting runtime settings see <link linkend="FirewallD1.Methods.getZoneSettings">org.fedoraproject.FirewallD1.Methods.getZoneSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, <parameter>UNUSED</parameter>, <parameter>target</parameter>, array of <parameter>services</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>icmp-blocks</parameter>, <parameter>masquerade</parameter>, array of <parameter>forward-ports</parameter> (port, protocol, to-port, to-addr), array of <parameter>interfaces</parameter>, array of <parameter>sources</parameter>, array of <parameter>rich rules</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>UNUSED (b)</parameter>: this boolean value is no longer used for anything.</term></varlistentry>
                  <varlistentry><term><parameter>target (s)</parameter>: see <literal>target</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>services (as)</parameter>: array of service names, see <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>icmp-blocks (as)</parameter>: array of icmp-blocks. See <literal>icmp-block</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>masquerade (b)</parameter>: see <literal>masquerade</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>forward-ports (a(ssss))</parameter>: array of (port, protocol, to-port, to-addr). See <literal>forward-port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>interfaces (as)</parameter>: array of interfaces. See <literal>interface</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>source addresses (as)</parameter>: array of source addresses. See <literal>source</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>rich rules (as)</parameter>: array of rich-language rules. See <literal>rule</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Methods.loadDefaults">
            <term><methodname>loadDefaults</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Load default settings for built-in zone.
              </para>
	      <para>
		Possible errors: NO_DEFAULTS
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Methods.remove">
            <term><methodname>remove</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Remove not built-in zone.
              </para>
	      <para>
		Possible errors: BUILTIN_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Methods.rename">
            <term><methodname>rename</methodname>(s: name) &rarr; Nothing</term>
            <listitem>
              <para>
		Rename not built-in zone to <replaceable>name</replaceable>.
              </para>
	      <para>
		Possible errors: BUILTIN_ZONE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Methods.update">
            <term><methodname>update</methodname>((sssbsasa(ss)asba(ssss)asasas): settings) &rarr; Nothing</term>
            <listitem>
              <para>
		Update settings of zone to <replaceable>settings</replaceable>.
		Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, <parameter>UNUSED</parameter>, <parameter>target</parameter>, array of <parameter>services</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>icmp-blocks</parameter>, <parameter>masquerade</parameter>, array of <parameter>forward-ports</parameter> (port, protocol, to-port, to-addr), array of <parameter>interfaces</parameter>, array of <parameter>sources</parameter>, array of <parameter>rich rules</parameter>
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>UNUSED (b)</parameter>: this boolean value is no longer used for anything.</term></varlistentry>
                  <varlistentry><term><parameter>target (s)</parameter>: see <literal>target</literal> attribute of <literal>zone</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>services (as)</parameter>: array of service names, see <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>icmp-blocks (as)</parameter>: array of icmp-blocks. See <literal>icmp-block</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>masquerade (b)</parameter>: see <literal>masquerade</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>forward-ports (a(ssss))</parameter>: array of (port, protocol, to-port, to-addr). See <literal>forward-port</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>interfaces (as)</parameter>: array of interfaces. See <literal>interface</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>source addresses (as)</parameter>: array of source addresses. See <literal>source</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>rich rules (as)</parameter>: array of rich-language rules. See <literal>rule</literal> tag in <citerefentry><refentrytitle>firewalld.zone</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.zone.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.zone.Signals.Removed">
            <term>Removed(s: name)</term>
            <listitem>
              <para>
		Emitted when zone with <replaceable>name</replaceable> has been removed.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Signals.Renamed">
            <term>Renamed(s: name)</term>
            <listitem>
              <para>
		Emitted when zone has been renamed to <replaceable>name</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Signals.Updated">
            <term>Updated(s: name)</term>
            <listitem>
              <para>
		Emitted when zone with <replaceable>name</replaceable> has been updated.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.zone.Properties">
        <title>Properties</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.zone.Properties.default">
            <term>default - b - (ro)</term>
            <listitem>
              <para>
		True if build-in zone has default settings. False if it has been modified. Always False for not build-in zones.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Properties.filename">
            <term>filename - s - (ro)</term>
            <listitem>
              <para>
		Name (including .xml extension) of file where the configuration is stored.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Properties.name">
            <term>name - s - (ro)</term>
            <listitem>
              <para>
		Name of zone.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.zone.Properties.path">
            <term>path - s - (ro)</term>
            <listitem>
              <para>
		Path to directory where the zone configuration is stored. Should be either /usr/lib/firewalld/zones or /etc/firewalld/zones.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config.service">
      <title>org.fedoraproject.FirewallD1.config.service</title>
      <para>
	Interface for permanent service configuration, see also <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
      </para>

      <refsect3 id="FirewallD1.config.service.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.service.Methods.getSettings">
            <term><methodname>getSettings</methodname>() &rarr; (sssa(ss)asa{ss})</term>
            <listitem>
              <para>
                Return permanent settings of a <replaceable>service</replaceable>.
                For getting runtime settings see <link linkend="FirewallD1.Methods.getServiceSettings">org.fedoraproject.FirewallD1.Methods.getServiceSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>module names</parameter>, dictionary of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>module names (as)</parameter>: array of kernel netfilter helpers, see <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (a{ss})</parameter>: dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'. See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.loadDefaults">
            <term><methodname>loadDefaults</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Load default settings for built-in service.
              </para>
	      <para>
		Possible errors: NO_DEFAULTS
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.remove">
            <term><methodname>remove</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Remove not built-in service.
              </para>
	      <para>
		Possible errors: BUILTIN_SERVICE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.rename">
            <term><methodname>rename</methodname>(s: name) &rarr; Nothing</term>
            <listitem>
              <para>
		Rename not built-in service to <replaceable>name</replaceable>.
              </para>
	      <para>
		Possible errors: BUILTIN_SERVICE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.update">
            <term><methodname>update</methodname>((sssa(ss)asa{ss}): settings) &rarr; Nothing</term>
            <listitem>
              <para>
		Update settings of service to <replaceable>settings</replaceable>.
		Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>ports</parameter> (port, protocol), array of <parameter>module names</parameter>, dictionary of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>ports (a(ss))</parameter>: array of port and protocol pairs. See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>module names (as)</parameter>: array of kernel netfilter helpers, see <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (a{ss})</parameter>: dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'. See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
	      <para>
		Possible errors: INVALID_TYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getVersion">
            <term><methodname>getVersion</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get version of service.
		See <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setVersion">
            <term><methodname>setVersion</methodname>(s: version) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set version of service to <replaceable>version</replaceable>.
		See <literal>version</literal> attribute of <literal>service</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getShort">
            <term><methodname>getShort</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get name of service.
		See <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setShort">
            <term><methodname>setShort</methodname>(s: short) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set name of service to <replaceable>short</replaceable>.
		See <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getDescription">
            <term><methodname>getDescription</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get description of service.
		See <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setDescription">
            <term><methodname>setDescription</methodname>(s: description) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set description of service to <replaceable>description</replaceable>.
		See <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getPorts">
            <term><methodname>getPorts</methodname>() &rarr; a(ss)</term>
            <listitem>
              <para>
		Get list of (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>) defined in service.
		See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setPorts">
            <term><methodname>setPorts</methodname>(a(ss): ports) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set ports of service to list of (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>).
		See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.addPort">
            <term><methodname>addPort</methodname>(s: port, s: protocol) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently add (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>) to list of ports in service.
		See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.removePort">
            <term><methodname>removePort</methodname>(s: port, s: protocol) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently remove (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>) from list of ports in service.
		See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.queryPort">
            <term><methodname>queryPort</methodname>(s: port, s: protocol) &rarr; Nothing</term>
            <listitem>
              <para>
		Return whether (<replaceable>port</replaceable>, <replaceable>protocol</replaceable>) is in list of ports in service.
		See <literal>port</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getModules">
            <term><methodname>getModules</methodname>() &rarr; as</term>
            <listitem>
              <para>
		Get list of modules (netfilter kernel helpers) used in service.
		See <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setModules">
            <term><methodname>setModules</methodname>(as: modules) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set list of modules (netfilter kernel helpers) used in service to <replaceable>modules</replaceable>.
		See <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.addModule">
            <term><methodname>addModule</methodname>(s: module) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently add <replaceable>module</replaceable> to list of modules (netfilter kernel helpers) used in service.
		See <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.removeModule">
            <term><methodname>removeModule</methodname>(s: module) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently remove <replaceable>module</replaceable> from list of modules (netfilter kernel helpers) used in service.
		See <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.queryModule">
            <term><methodname>queryModule</methodname>(s: module) &rarr; Nothing</term>
            <listitem>
              <para>
		Return whether <replaceable>module</replaceable> is in list of modules (netfilter kernel helpers) used in service.
		See <literal>module</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>

          <varlistentry id="FirewallD1.config.service.Methods.getDestinations">
            <term><methodname>getDestinations</methodname>() &rarr; a{ss}</term>
            <listitem>
              <para>
		Get list of destinations.
		Return value is a dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setDestinations">
            <term><methodname>setDestinations</methodname>(a{ss}: destinations) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set destinations of service to <replaceable>destinations</replaceable>, which is a dictionary of {IP family : IP address} where 'IP family' key can be either 'ipv4' or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.getDestination">
            <term><methodname>getDestination</methodname>(s: family) &rarr; s</term>
            <listitem>
              <para>
		Permanently set a destination address.
		destination is in format: (<replaceable>IP_family</replaceable>, <replaceable>IP_address</replaceable>) where <replaceable>IP_family</replaceable> can be either 'ipv4' or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.setDestination">
            <term><methodname>setDestination</methodname>(ss: destination) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set a destination address.
		destination is in format: (<replaceable>IP_family</replaceable>, <replaceable>IP_address</replaceable>) where <replaceable>IP_family</replaceable> can be either 'ipv4' or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.removeDestination">
            <term><methodname>removeDestination</methodname>(s: family) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently remove a destination with <replaceable>family</replaceable> ('ipv4' or 'ipv6') from service.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Methods.queryDestination">
            <term><methodname>queryDestination</methodname>(ss: destination) &rarr; b</term>
            <listitem>
              <para>
		Return whether a <replaceable>destination</replaceable> is in dictionary of destinations of this service.
		destination is in format: (<replaceable>IP_family</replaceable>, <replaceable>IP_address</replaceable>) where <replaceable>IP_family</replaceable> can be either 'ipv4' or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.service</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.service.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.service.Signals.Removed">
            <term>Removed(s: name)</term>
            <listitem>
              <para>
		Emitted when service with <replaceable>name</replaceable> has been removed.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Signals.Renamed">
            <term>Renamed(s: name)</term>
            <listitem>
              <para>
		Emitted when service has been renamed to <replaceable>name</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Signals.Updated">
            <term>Updated(s: name)</term>
            <listitem>
              <para>
		Emitted when service with <replaceable>name</replaceable> has been updated.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.service.Properties">
        <title>Properties</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.service.Properties.default">
            <term>default - b - (ro)</term>
            <listitem>
              <para>
		True if build-in service has default settings. False if it has been modified. Always False for not build-in services.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Properties.filename">
            <term>filename - s - (ro)</term>
            <listitem>
              <para>
		Name (including .xml extension) of file where the configuration is stored.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Properties.name">
            <term>name - s - (ro)</term>
            <listitem>
              <para>
		Name of service.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.service.Properties.path">
            <term>path - s - (ro)</term>
            <listitem>
              <para>
		Path to directory where the configuration is stored. Should be either /usr/lib/firewalld/services or /etc/firewalld/services.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

    <refsect2 id="FirewallD1.config.icmptype">
      <title>org.fedoraproject.FirewallD1.config.icmptype</title>
      <para>
	Interface for permanent icmp type configuration, see also <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
      </para>

      <refsect3 id="FirewallD1.config.icmptype.Methods">
        <title>Methods</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.icmptype.Methods.getSettings">
            <term><methodname>getSettings</methodname>() &rarr; (sssas)</term>
            <listitem>
              <para>
                Return permanent settings of <replaceable>icmp type</replaceable>.
                For getting runtime settings see <link linkend="FirewallD1.Methods.getIcmpTypeSettings">org.fedoraproject.FirewallD1.Methods.getIcmpTypeSettings</link>.
                Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (as)</parameter>: array, either empty or containing strings 'ipv4' and/or 'ipv6', see destination tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.loadDefaults">
            <term><methodname>loadDefaults</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Load default settings for built-in icmp type.
              </para>
	      <para>
		Possible errors: NO_DEFAULTS
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.remove">
            <term><methodname>remove</methodname>() &rarr; Nothing</term>
            <listitem>
              <para>
		Remove not built-in icmp type.
              </para>
	      <para>
		Possible errors: BUILTIN_ICMPTYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.rename">
            <term><methodname>rename</methodname>(s: name) &rarr; Nothing</term>
            <listitem>
              <para>
		Rename not built-in icmp type to <replaceable>name</replaceable>.
              </para>
	      <para>
		Possible errors: BUILTIN_ICMPTYPE
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.update">
            <term><methodname>update</methodname>((sssas): settings) &rarr; Nothing</term>
            <listitem>
              <para>
		Update permanent settings of icmp type to <replaceable>settings</replaceable>.
		Settings are in format: <parameter>version</parameter>, <parameter>name</parameter>, <parameter>description</parameter>, array of <parameter>destinations</parameter>.
              </para>
              <para>
                <variablelist>
                  <varlistentry><term><parameter>version (s)</parameter>: see <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>name (s)</parameter>: see <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>description (s)</parameter>: see <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                  <varlistentry><term><parameter>destinations (as)</parameter>: array, either empty or containing strings 'ipv4' and/or 'ipv6', see destination tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</term></varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.getVersion">
            <term><methodname>getVersion</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get version of icmp type.
		See <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.setVersion">
            <term><methodname>setVersion</methodname>(s: version) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set version of icmp type to <replaceable>version</replaceable>.
		See <literal>version</literal> attribute of <literal>icmptype</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.getShort">
            <term><methodname>getShort</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get name of icmp type.
		See <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.setShort">
            <term><methodname>setShort</methodname>(s: short) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set name of icmp type to <replaceable>short</replaceable>.
		See <literal>short</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.getDescription">
            <term><methodname>getDescription</methodname>() &rarr; s</term>
            <listitem>
              <para>
		Get description of icmp type.
		See <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.setDescription">
            <term><methodname>setDescription</methodname>(s: description) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set description of icmp type to <replaceable>description</replaceable>.
		See <literal>description</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.getDestinations">
            <term><methodname>getDestinations</methodname>() &rarr; as</term>
            <listitem>
              <para>
		Get list of destinations.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.setDestinations">
            <term><methodname>setDestinations</methodname>(as: destinations) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently set destinations of icmp type to <replaceable>destinations</replaceable>, which is array, either empty or containing strings 'ipv4' and/or 'ipv6'.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.addDestination">
            <term><methodname>addDestination</methodname>(s: destination) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently add a <replaceable>destination</replaceable> ('ipv4' or 'ipv6') to list of destinations of this icmp type.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
      	      <para>
		Possible errors: ALREADY_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.removeDestination">
            <term><methodname>removeDestination</methodname>(s: destination) &rarr; Nothing</term>
            <listitem>
              <para>
		Permanently remove a <replaceable>destination</replaceable> ('ipv4' or 'ipv6') from list of destinations of this icmp type.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
	      <para>
		Possible errors: NOT_ENABLED
	      </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Methods.queryDestination">
            <term><methodname>queryDestination</methodname>(s: destination) &rarr; b</term>
            <listitem>
              <para>
		Return whether a <replaceable>destination</replaceable> ('ipv4' or 'ipv6') is in list of destinations of this icmp type.
		See <literal>destination</literal> tag in <citerefentry><refentrytitle>firewalld.icmptype</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.icmptype.Signals">
        <title>Signals</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.icmptype.Signals.Removed">
            <term>Removed(s: name)</term>
            <listitem>
              <para>
		Emitted when icmp type with <replaceable>name</replaceable> has been removed.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Signals.Renamed">
            <term>Renamed(s: name)</term>
            <listitem>
              <para>
		Emitted when icmp type has been renamed to <replaceable>name</replaceable>.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Signals.Updated">
            <term>Updated(s: name)</term>
            <listitem>
              <para>
		Emitted when icmp type with <replaceable>name</replaceable> has been updated.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>

      <refsect3 id="FirewallD1.config.icmptype.Properties">
        <title>Properties</title>
        <variablelist>
          <varlistentry id="FirewallD1.config.icmptype.Properties.default">
            <term>default - b - (ro)</term>
            <listitem>
              <para>
		True if build-in icmp type has default settings. False if it has been modified. Always False for not build-in zones.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Properties.filename">
            <term>filename - s - (ro)</term>
            <listitem>
              <para>
		Name (including .xml extension) of file where the configuration is stored.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Properties.name">
            <term>name - s - (ro)</term>
            <listitem>
              <para>
		Name of icmp type.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry id="FirewallD1.config.icmptype.Properties.path">
            <term>path - s - (ro)</term>
            <listitem>
              <para>
		Path to directory where the icmp type configuration is stored. Should be either /usr/lib/firewalld/icmptypes or /etc/firewalld/icmptypes.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect3>
    </refsect2>

  </refsect1>

  &seealso;

  &notes;

</refentry>
